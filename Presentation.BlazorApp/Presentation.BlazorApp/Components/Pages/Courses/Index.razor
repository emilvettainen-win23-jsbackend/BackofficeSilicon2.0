@page "/courses"
@using System.Text.Json
@using Presentation.BlazorApp.Models.Courses
@using System.Net.Http.Json
@using System.Text.Json.Serialization
@using Presentation.BlazorApp.Services

@inject HttpClient Http
@inject CourseService CourseService

@* @attribute [Authorize] *@
@attribute [StreamRendering]


<h3>Index</h3>

@if (courses == null)
{
    <p>Loading...</p>
}
else if (isError)
{
    <p>Kan inte hämta kurser just nu.</p>
}
else if (courses.Count == 0)
{
    <p>No courses available.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr class="course-header">
                <th class="title">Title</th>               
                <th>Category</th>
                <th>Action</th>
            </tr>
        </thead>

        <tbody>


            @foreach (var course in courses)
            {
                <tr class="course-info">
                    <th>@course.CourseTitle</th>
                    <th>@course.Category</th>
                    <th class="buttons"> @* Edit / Remove  *@
                        <button class="btn btn-primary">Edit</button>
                        <button class="btn btn-danger">Remove</button>
                    </th>
                </tr>
            }

        </tbody>

    </table>
}



@code {
    private List<CourseSelect>? courses = new();

    private bool isError;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            courses = await CourseService.GetAllCoursesAsync();
        }
        catch (Exception)
        {
            isError = true;
        }
    }

    private async Task DeleteAsync(string id)
    {
        try
        {
            var result = await CourseService.DeleteCourseAsync(id);

            if (result == true)
            {
                var removedCourse = courses!.FirstOrDefault(c => c.Id == id);
                courses!.Remove(removedCourse);

                StateHasChanged();
            }
        }
        catch
        {
            
        }
    }
}


                 