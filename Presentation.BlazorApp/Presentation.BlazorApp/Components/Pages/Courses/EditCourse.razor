@using Presentation.BlazorApp.Models.Courses
@using Presentation.BlazorApp.Services

@page "/edit-course"


<section class="update-course">
    <div class="container">

        @if (!string.IsNullOrEmpty(statusMessage))
        {
            <div class="status-message">
                <p class="@(isError ? "text-danger" : "text-success")">@statusMessage</p>
            </div>
        }

        <h3>Edit Course</h3>

        <EditForm Model="UpdatedCourse" method="post" OnValidSubmit="HandleSubmitAsync" Enhance novalidate>
            <DataAnnotationsValidator />

            <div class="content">

                <div>
                    <label for="title">Title</label>
                    <InputText id="title" @bind-Value="UpdatedCourse.CourseTitle" class="form-control" />
                </div>

                <div>
                    <label for="ingress">Ingress</label>
                    <InputText id="ingress" @bind-Value="UpdatedCourse.CourseIngress" class="form-control" />
                </div>

                <div>
                    <label for="courseimg">Course image</label>
                    <span>JPG, JPEG, SVG or PNG.</span>
                    <span>Max filesize 2500 * 1500 </span>
                    <div class="upload-image">
                        <InputFile id="courseimg" @* OnChange="UploadCourseImg" *@ />
                        <img src="@UpdatedCourse.CourseImageUrl" style="max-width: 200px; max-height: 200px;" />
                        //delete excisiting?
                    </div>
                </div>

                <div>
                    <label class="checkbox-label" for="bestseller">Bestseller</label>
                    <InputCheckbox id="bestseller" @bind-Value="UpdatedCourse.IsBestseller" class="form-check-input" />
                </div>

                <div>
                    <label for="category">Category</label>
                    <InputText id="category" @bind-Value="UpdatedCourse.Category" class="form-control" />
                </div>

                <div class="rating">
                    <label for="rating">Rating in numbers</label>
                    <InputNumber id="rating" @bind-Value="UpdatedCourse.Rating.InNumbers" class="form-control" />
                    <label for="rating">Rating in procent</label>
                    <InputNumber id="rating" @bind-Value="UpdatedCourse.Rating.InProcent" class="form-control" />
                </div>

                <div>
                    <label for="author">Author</label>
                    <InputText id="author" @bind-Value="UpdatedCourse.Author.FullName" class="form-control" placeholder="Full name" />
                    <InputTextArea id="author" @bind-Value="UpdatedCourse.Author.Biography" class="form-control" placeholder="Biography" />

                    <label for="authorimg">Profile image</label>
                    <span>JPG, JPEG, SVG or PNG.</span>
                    <span>Max filesize 2500 * 1500 </span>
                    <div class="upload-image">
                        <InputFile id="authorimg" @* OnChange="UploadAuthorImg" *@ />
                        <img src="@UpdatedCourse.Author.ProfileImageUrl" style="max-width: 200px; max-height: 200px;" />
                    </div>

                    <InputText id="author" @bind-Value="UpdatedCourse.Author.SocialMedia.FacebookUrl" class="form-control" placeholder="Facebook url (optional)" />
                    <InputText id="author" @bind-Value="UpdatedCourse.Author.SocialMedia.YouTubeUrl" class="form-control" placeholder="YouTube url (optional)" />
                    <InputText id="author" @bind-Value="UpdatedCourse.Author.SocialMedia.Subscribers" class="form-control" placeholder="Subscribers (optional)" />
                    <InputText id="author" @bind-Value="UpdatedCourse.Author.SocialMedia.Followers" class="form-control" placeholder="Followers (optional)" />
                </div>

                <div class="price">
                    <label for="price">Original price</label>
                    <InputNumber id="price" @bind-Value="UpdatedCourse.Prices.OriginalPrice" class="form-control" />
                    <label for="price">Discounted price</label>
                    <InputNumber id="price" @bind-Value="UpdatedCourse.Prices.DiscountPrice" class="form-control" />
                </div>

                <div>
                    <label for="included">Hours of video</label>
                    <InputNumber id="included" @bind-Value="UpdatedCourse.Included.HoursOfVideo" class="form-control" />
                    <label for="included">Number of articles</label>
                    <InputNumber id="included" @bind-Value="UpdatedCourse.Included.Articles" class="form-control" />
                    <label for="included">Number of recourses</label>
                    <InputNumber id="included" @bind-Value="UpdatedCourse.Included.Resources" class="form-control" />
                    <label class="checkbox-label" for="included">Lifetime access</label>
                    <InputCheckbox id="included" @bind-Value="UpdatedCourse.Included.LifetimeAccess" class="form-check-input" />
                    <label class="checkbox-label certificate" for="included">Certificate</label>
                    <InputCheckbox id="included" @bind-Value="UpdatedCourse.Included.Certificate" class="form-check-input" />
                </div>

@*                 <div class="highlights">
                    <label>Highlights</label>
                    <button type="button" class="btn btn-secondary" @onclick="AddHighlight">Add highlight</button>
                    @foreach (var highlight in Course.Highlights)
                    {
                        <div class="highlight-item">
                            <InputText @bind-Value="highlight.Highlight" class="form-control" />
                            <button type="button" class="btn btn-danger" @onclick="() => RemoveHighlight(highlight)">Remove</button>
                        </div>
                    }
                </div>

                <div class="details">
                    <label>Program details</label>
                    <button type="button" class="btn btn-secondary" @onclick="AddProgramDetail">Add program detail</button>

                    @foreach (var detail in Course.Content)
                    {
                        <div class="detail-item">
                            <InputText @bind-Value="detail.Title" class="form-control" placeholder="Title" />
                            <InputText @bind-Value="detail.Description" class="form-control" placeholder="Description" />
                            <button type="button" class="btn btn-danger" @onclick="() => RemoveProgramDetail(detail)">Remove</button>
                        </div>
                    }
                </div> *@

            </div>

            <div class="form-buttons">
                <button type="submit" class="btn btn-primary">Save</button>

                <NavLink class="nav-link" href="/courses">
                    <button type="button" class="btn btn-danger">Cancel</button>
                </NavLink>
            </div>

        </EditForm>

    </div>

</section>


@code {
    [SupplyParameterFromForm]
    private UpdateCourse UpdatedCourse { get; set; } = new(); 


    private string statusMessage = "";
    private bool isError;


    protected override async Task OnInitializedAsync()
    {
        try
        {

        }
        catch (Exception)
        {
            
        }
    }


    #region HandleSubmitAsync

    private async Task HandleSubmitAsync()
    {
        // var success = await CourseService.CreateCourseAsync(Course);
        // if (success)
        // {
        //     statusMessage = "Course created successfully.";
        //     isError = false;
        // }
        // else
        // {
        //     statusMessage = "Failed to create course.";
        //     isError = true;
        // }
    }

    #endregion
}